name: Regression project

on:
  push:
    branches:
      - master
env:
  PROJECT_ID: ${{secrets.RUN_PROJECT}}
  GAR_LOCATION: us-central1
  SERVICE: smitbackend
  REGION: us-central1
  DOCKER_USER: '${{secrets.DOCKER_USERNAME}}'
  DOCKER_PASSWORD: '${{secrets.DOCKER_PASSWORD}}'
jobs:
  build-and-deploy:

    permissions:
     contents: 'read'
     id-token: 'write'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' 

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{secrets.GCP_CREDENTIALS}}'
        
    - name: Install Requirements
      run: pip install -r requirements.txt

  
    - name: Create Release Branch
      uses: peterjgrainger/action-create-branch@v2.2.0
      env:
        GITHUB_TOKEN: '${{secrets.GH_TOKEN}}'
      with: 
          branch: 'release-${{ github.run_id }}-${{ github.run_number }}'
          sha: '${{ github.event.pull_request.head.sha }}'

  # We looked in to market place for this step and we found most of them will be duplicated steps so we checked there step and we used only one step from their defined actions
    - name: Execute Code Coverage Test using Pytest
      run: |
        git fetch
        git checkout release-${{ github.run_id }}-${{ github.run_number }}
        pytest ./swagger_server/libs/test_regression_project.py --cov=./ --cov-report=html --doctest-modules 

    - name: Commit Coverage Test Report
      run:  |
        git checkout release-${{ github.run_id }}-${{ github.run_number }}
        git config --global user.name 'Apinya'
        git config --global user.email 'apinyarr@hotmail.com'
        rm -f ./htmlcov/.gitignore
        git add ./htmlcov
        git commit -m "Add report folder"
        git push origin release-${{ github.run_id }}-${{ github.run_number }}
    
    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v1'
      with:
        username: '${{secrets.DOCKER_USERNAME}}'
        password: '${{secrets.DOCKER_PASSWORD}}'

    - name: Docker Login
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Build Docker Image
      run: docker build -t apinyarr/devops-doct-cicd-ica1:v0.1 .

    
    - name: List images
      run: docker images

    - name: Docker Push
      run: docker push apinyarr/devops-doct-cicd-ica1:v0.1

    - name: Deploy to Google Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with: 
        service: ${{env.SERVICE}}
        region: ${{env.REGION}}
        image: apinyarr/devops-doct-cicd-ica1:v0.1

    - name: Show output
      run: echo ${{steps.deploy.outputs.url }}
    

   
